version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: fund_postgres
    environment:
      POSTGRES_DB: fund_reports
      POSTGRES_USER: fund_user
      POSTGRES_PASSWORD: fund_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - fund_network
    restart: unless-stopped

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    container_name: fund_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fund_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: fund_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - fund_network
    restart: unless-stopped
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket initialization
  minio_client:
    image: minio/mc:latest
    container_name: fund_minio_client
    depends_on:
      - minio
    networks:
      - fund_network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/fund-reports --ignore-existing;
      /usr/bin/mc policy set public myminio/fund-reports;
      exit 0;
      "

  # FastAPI Application (development)
  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: fund_app
    environment:
      - DATABASE_URL=postgresql://fund_user:fund_password@postgres:5432/fund_reports
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - fund_network
    depends_on:
      - postgres
      - redis
      - minio
    restart: unless-stopped
    profiles:
      - app

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fund_celery_worker
    environment:
      - DATABASE_URL=postgresql://fund_user:fund_password@postgres:5432/fund_reports
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - .:/app
    networks:
      - fund_network
    depends_on:
      - postgres
      - redis
      - minio
    restart: unless-stopped
    command: celery -A src.core.celery worker --loglevel=info
    profiles:
      - worker

  # Celery Beat Scheduler
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fund_celery_beat
    environment:
      - DATABASE_URL=postgresql://fund_user:fund_password@postgres:5432/fund_reports
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - .:/app
    networks:
      - fund_network
    depends_on:
      - postgres
      - redis
      - minio
    restart: unless-stopped
    command: celery -A src.core.celery beat --loglevel=info
    profiles:
      - scheduler

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  fund_network:
    driver: bridge